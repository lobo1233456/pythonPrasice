---
version: 2

jobs:
  python:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
      - image: rabbitmq:management
      - image: redis
    steps:
      - checkout
      - run:
          name: Compute Python dependencies key
          command: cat requirements/*.pip > python.deps
      - run:
          name: Get the base reference branch
          command: export BASE_BRANCH=$(base_branch)
      - restore_cache:
          keys:
          - py-cache-v2-{{ checksum "python.deps" }}
          - py-cache-v2-{{ .Branch }}
          - py-cache-v2-{{ .Environment.BASE_BRANCH }}
      - run:
          name: Install python dependencies
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements/develop.pip || pip install -r requirements/develop.pip
      - save_cache:
          key: py-cache-v2-{{ checksum "python.deps" }}
          paths:
          - venv
      - save_cache:
          key: py-cache-v2-{{ .Branch }}
          paths:
          - venv
      - run:
          name: Wait for rabbit
          command: dockerize -wait tcp://localhost:15672 -timeout 1m
      - run:
          name: Run tests
          command: |
            source venv/bin/activate
            inv qa test --report
      - store_test_results:
          path: reports/python
      - store_artifacts:
          path: reports/
          destination: reports

      - persist_to_workspace:
          root: .
          paths:
          - venv

  dist:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build a distributable package
          command: |
            source venv/bin/activate
            if [[ $CIRCLE_TAG ]]; then inv dist; else inv dist -b $CIRCLE_BUILD_NUM; fi
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: .
          paths:
            - dist

  publish:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Twine
          command: sudo pip install twine
      - deploy:
          name: Publish on PyPI
          command: twine upload --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" dist/*.whl

workflows:
  version: 2
  build:
    jobs:
      - python:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - dist:
          requires:
            - python
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish:
          requires:
            - dist
          filters:
            branches:
              only:
                - /v[0-9]+(\.[0-9]+)*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          context: org-global
